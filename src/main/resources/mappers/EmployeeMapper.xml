<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shiji.dao.EmployeeMapper">
    <!--<typeAliases>-->
    <!--<typeAlias alias="EmployeeResult" type="com.shiji.dao.dataobject.EmployeeDO"/>-->
    <!--</typeAliases>-->
    <resultMap id="EmployeeResult" type="com.shiji.dao.dataobject.EmployeeDO">
        <result property="id" column="id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="name" column="name"/>
        <result property="englishName" column="english_name"/>
        <result property="code" column="code"/>
        <result property="departmentId" column="department_id"/>
        <result property="jobTitle" column="job_title"/>
        <result property="gender" column="gender"/>
        <result property="location" column="location"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="description" column="description"/>
        <result property="onboardAt" column="onboard_at"/>
        <result property="leavedAt" column="leaved_at"/>
        <result property="level" column="level"/>
        <result property="status" column="status"/>
        <result property="assessPhase" column="assess_phase"/>

    </resultMap>
    <sql id="whereCondition">
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="assessPhase != null">
                assess_phase = #{assessPhase}
            </if>
            <if test="statuses != null">
                and status in
                <foreach collection="statuses" item="status"
                         index="index" open="(" close=")" separator=",">
                    #{status}
                </foreach>
            </if>
            <if test="ids != null">
                and id in
                <foreach collection="ids" item="status"
                         index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="name !=null">
                and name like CONCAT('%',#{name},'%')
            </if>
            <if test="englishName !=null">
                and english_name like CONCAT('%',#{englishName},'%')
            </if>
            <if test="location !=null">
                and location = #{location}
            </if>
            <if test="createdAtFrom != null">
                and created_at
                >= #{createdAtFrom}
            </if>
            <if test="createdAtTo != null">
                <![CDATA[
				and created_at <= #{createdAtTo}
				]]>
            </if>
            <if test="updatedAtFrom != null">
                and updated_at
                >= #{updatedAtFrom}
            </if>
            <if test="updatedAtTo != null">
                <![CDATA[
				and updated_at <= #{updatedAtTo}
				]]>
            </if>
            <if test="description !=null">
                and description like CONCAT('%',#{description},'%')
            </if>
            <if test="status !=null">
                and status = #{status}
            </if>
            <if test="code !=null">
                and code = #{code}
            </if>
            <if test="departmentId !=null">
                and department_id = #{departmentId}
            </if>

        </where>
    </sql>

    <insert id="insert" parameterType="com.shiji.dao.dataobject.EmployeeDO">
        INSERT INTO employee(
        created_at,
        updated_at,
        onboard_at,
        name,
        english_name,
        gender,
        code,
        department_id,
        job_title,
        location,
        email,
        phone,
        description,
        leaved_at,
        level,
        status,
        assess_phase
        )
        VALUES(
        now(),
        now(),
        #{onboardAt},
        #{name},
        #{englishName},
        #{gender},
        #{code},
        #{departmentId},
        #{jobTitle},
        #{location},
        #{email},
        #{phone},
        #{description},
        #{leavedAt},
        #{level},
        #{status},
        #{assessPhase}
        )
        <selectKey resultType="int" keyProperty="id">
            select last_insert_id() as id
        </selectKey>
    </insert>

    <update id="updataAssessPhaseById" parameterType="com.shiji.dao.dataobject.EmployeeDO">
        UPDATE employee
        SET
        updated_at = now(),
        assess_phase = #{assessPhase}
        WHERE id = #{id};
    </update>

    <update id="update" parameterType="com.shiji.dao.dataobject.EmployeeDO">
        UPDATE employee
        SET
        updated_at = now(),
        onboard_at = #{onboardAt},
        name = #{name},
        english_name = #{englishName},
        gender = #{gender},
        code = #{code},
        department_id = #{departmentId},
        job_title = #{jobTitle},
        location = #{location},
        email = #{email},
        phone = #{phone},
        leaved_at = #{leavedAt},
        level = #{level},
        status = #{status},
        assess_phase = #{assessPhase},
        description = #{description}
        WHERE id = #{id};
    </update>
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from employee where id=#{id}
    </delete>

    <select id="findByCondition" parameterType="java.util.Map"
            resultMap="EmployeeResult">
        select * from employee
        <include refid="whereCondition"/>
        <choose>
            <when test="order != null">
                order by ${order}
                ${orderType}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        limit #{fromRow},#{toRow}
    </select>
    <select id="countByCondition" parameterType="java.util.Map"
            resultType="java.lang.Integer">
        select count(*) from employee
        <include refid="whereCondition"/>
    </select>

    <select id="findAll" resultMap="EmployeeResult">
        select * from employee
    </select>
    <select id="findById" parameterType="java.lang.Integer"
            resultMap="EmployeeResult">
        select * from employee where id = #{id}
    </select>

</mapper>